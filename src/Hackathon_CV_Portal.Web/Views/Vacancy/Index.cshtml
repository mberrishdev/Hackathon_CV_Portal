@using Hackathon_CV_Portal.Application.Implementations.Vacancies.Models;
@using Hackathon_CV_Portal.Domain.Enums
@using Hackathon_CV_Portal.Domain.Users
@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject SignInManager<ApplicationUser> SignInManager
@model VacansyVM;

@{
    ViewBag.User = User;
}

<div class="container-xxl py-5" id="Div">
    <div class="container">
        <div class="tab-class text-center wow fadeInUp" data-wow-delay="0.3s">
            @if (@Model.WithFil)
            {
                <!-- Search Start -->
                <div class="container-fluid bg-primary mb-5 wow fadeIn" data-wow-delay="0.1s" style="padding: 35px;">
                    <div class="container">
                        <div class="row g-2">
                            <div class="col-md-10">
                                <div class="row g-2">
                                    <div class="col-md-4">
                                        <input type="text" id="KeywordInput" class="form-control border-0" placeholder="ტექსტი" />
                                    </div>
                                    <div class="col-md-4">
                                        <select id="CategoryInput" class="form-select border-0">
                                            <option value="0" selected>კატეგორიები</option>
                                            @foreach (var category in Model.Categories)
                                            {
                                                <option value="@category.Id">@category.Name</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <select id="LocationInput" class="form-select border-0">
                                            <option selected value="0">მოსამართი</option>
                                            @* @foreach (var location in Model.Locations)
                                        {
                                        <option value="@location.Id">@location.Name</option>
                                        } *@
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <button onclick="GetVacances()" class="btn btn-dark border-0 w-100">ძებნა</button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- Search End -->
            }
            <ul class="nav nav-pills d-inline-flex justify-content-center border-bottom mb-5">
                <li class="nav-item">
                    <a class="d-flex align-items-center text-start mx-3 pb-3" data-bs-toggle="pill" href="#tab-2">
                        <h6 class="mt-n1 mb-0"><a class="page-link" href="?vacancyType=FullTime">Full Time</a></h6>
                    </a>
                </li>
                <li class="nav-item">
                    <a class="d-flex align-items-center text-start mx-3 me-0 pb-3" data-bs-toggle="pill" href="#tab-3">
                        <h6 class="mt-n1 mb-0"><a class="page-link" href="?vacancyType=PartTime">Part Time</a></h6>
                    </a>
                </li>
            </ul>
            <div class="tab-content" id="Test">
                <div id="tab-1" class="tab-pane fade show p-0 active">
                    @if (Model.IsEmpty)
                    {    @if (User.HasClaim(ClaimTypes.Role, UserRole.User.ToString()))
                        {
                            <h2>ვაკანსიები არ არის დამატებული.</h2>
                        }
                        @if (User.HasClaim(ClaimTypes.Role, UserRole.Company.ToString()))
                        {
                            <h2>თქვენ არ გაქვთ განთავსებული ვაკასიები.</h2>
                            <a class="btn btn-primary" asp-controller="Vacancy" asp-action="Add">ვაკანსიის დამატება</a>
                        }
                    }
                    else
                    {
                        @foreach (var vacancy in Model.VacancyModels)
                        {
                            <div class="job-item p-3 mb-2 bg-light text-dark">
                                <div class="row g-4">
                                    <div class="col-sm-12 col-md-8 d-flex align-items-center">
                                        <div class="text-start ps-4">
                                            <h5 class="mb-3">@vacancy.Title</h5>
                                            <span class="text-truncate me-3"><i class="fa fa-map-marker-alt text-primary me-2"></i>@vacancy.Location</span>
                                            <span class="text-truncate me-3"><i class="far fa-clock text-primary me-2"></i>@vacancy.Type</span>
                                            <span class="text-truncate me-0"><i class="far fa-money-bill-alt text-primary me-2"></i>@vacancy.SalaryRange</span>
                                        </div>
                                    </div>
                                    <div class="col-sm-12 col-md-4 d-flex flex-column align-items-start align-items-md-end justify-content-center">
                                        <div class="d-flex mb-3">
                                            @if (@vacancy.IsFavourite && User.HasClaim(ClaimTypes.Role, UserRole.User.ToString()))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-light btn-square me-3" asp-controller="Vacancy" asp-action="RemoveFavourite" asp-route-id="@vacancy.Id"><i class=" far fa-heart text-primary bi-suit-heart-fill"></i></a>
                                                </div>
                                            }
                                            else if (User.HasClaim(ClaimTypes.Role, UserRole.User.ToString()))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-light btn-square me-3" asp-controller="Vacancy" asp-action="AddFavourite" asp-route-id="@vacancy.Id"><i class=" far fa-heart text-primary"></i></a>
                                                </div>
                                            }
                                            @if (User.HasClaim(ClaimTypes.Role, UserRole.User.ToString()) || !SignInManager.IsSignedIn(User))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-primary me-2" asp-controller="AppliedCurriculumVitae" asp-action="Apply" asp-route-id="@vacancy.Id">Apply Now</a>
                                                </div>
                                            }
                                            <div class="form-group">
                                                <a class="btn btn-info me-2" asp-controller="Vacancy" asp-action="Detail" asp-route-id="@vacancy.Id">დეტალები</a>
                                            </div>
                                            @if (User.HasClaim(ClaimTypes.Role, UserRole.Company.ToString()) && @vacancy.UserId == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-warning me-2" asp-controller="Vacancy" asp-action="Edit" asp-route-id="@vacancy.Id">რედაქტირება</a>
                                                </div>
                                            }
                                            @if ((User.HasClaim(ClaimTypes.Role, UserRole.Company.ToString()) && @vacancy.UserId == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier))) || User.HasClaim(ClaimTypes.Role, UserRole.Admin.ToString()))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-danger me-2" asp-controller="Vacancy" asp-action="Delete" asp-route-id="@vacancy.Id">წაშლა</a>
                                                </div>
                                            }
                                            @if ((User.HasClaim(ClaimTypes.Role, UserRole.Company.ToString())) && @vacancy.UserId == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                                            {
                                                <div class="form-group">
                                                    <a class="btn btn-success me-2" asp-controller="AppliedCurriculumVitae" asp-action="Index" asp-route-vacancyId="@vacancy.Id">გამოგზავნილი ვაკანსიები</a>
                                                </div>
                                            }
                                        </div>
                                        <small class="text-truncate"><i class="far fa-calendar-alt text-primary me-2"></i>@vacancy.DeadLine</small>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<nav aria-label="Page navigation example" class="text-center ">
    <ul class="pagination">
        @for (int i = 1; i <= Model.TottalPages; i++)
        {
            <li class="page-item"><a class="page-link" href="?page=@i">@i</a></li>
        }
    </ul>
</nav>

<script type="text/javascript">
    function GetVacances() {


        var a = Boolean(@User.HasClaim("Role", "User").ToString().ToLower());
        var v = Boolean(@User.HasClaim("role", "company").ToString().ToLower())
        var keyword = document.getElementById("KeywordInput").value;
        var cateogry = document.getElementById("CategoryInput").value;
        var location = document.getElementById("LocationInput").value;
        var SetData = $("#Test");
        SetData.html("");
        $.ajax({
            type: "POST",
            url: "/Vacancy/Index",
            data: {
                searchKeyword: keyword,
                categoryId: cateogry,
                locationId: location,
            },

             success: function(response) {
              var seachDiv =  $($.parseHTML(response)).find("#Div").html();
              document.getElementById("Div").innerHTML = seachDiv;
            }

        })
    }
</script>

